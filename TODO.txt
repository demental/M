=== Tests ===
	* add already written tests to the repository
	* provide a mechanism to easily test modules/actions :
		# add form & fb factory proxy methods to Module ($this->createForm() =>QuickForm, $this->createManager()=>MyFB )
		# A module can now be filled with an arbitrary request so simulating form submission is possible
	* add automatic unittests generation for each DataObject including barebones CRUD testing (to be added to M/DB/DataObject/advgenerator.php) - see folder structure proposal below


=== Structure refactoring ===
provide mechanism in accordance to the defined project structure (@see README.txt in the skeleton/ folder for structure explanation.)
M_Startup.php should be moved from the application root to the M folder
	pros : commands could include it easier whichever working directory the command is fired from 
	cons : this means setting up a server which has not its pear rep configured correctly will be trickier

		
	
=== Commands ===
	* finish skeleton content
	* create shell executable(s) (mf ?)
	* pecl-style installer with prompt
	* commands :
		# mfcreate -project project_name :
		 # prompt for PEAR incl_path (if not detected)
		 # prompt for www folder (relative to app_root)
		 # prompt for main DB_URI
		 # prompt for main HTTP(s) URL

		# mfcreate -project project_name -app app_name  :
		 # if project does not exists prompt : ask wether to create it
			=> create project 
		 # prompt for app type (office or default)
		 # prompt for domain subfolder (/ by default)
		# mfcreate -project project_name -app app_name -module module_name
		 # same as above for project and app
		 => module creation with index
		
		# mfutil -project project_name -regenerate
		=> Regenerate DBDO
		# mfutil -project project_name -cc app_name
		=> Clear cache for app app_name
		# mfutil -project project_name -release
		=> css&js minification and copy to web folder
		# mfutil -project project_name -app app_name -grablang lang
		=> Scan all project/app files to create (or append) a lang XML file
		
		
		# mfinstall (...)


=== Caching ===
	* Take advantage of the "section" feature of PEAR::Cache_Lite to organize caching by module and action.
	* Provide methods to clear cache (in the Module class) :
		* public function clearMyCache($action = null) => to clear cache at a module Level
		* public static function clearCache($module = null, $action = null, $app = null) => to clear the cache at an application level
		* public static function clearCacheByID($cacheID) => to clear a cacheID 
		* public static clearConfigCache($module = null, $app = null) => to clear configuration cache
		